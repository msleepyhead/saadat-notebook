# Name of the GitHub Action
name: Deploy New APK and Update JSON

# This action runs automatically whenever a new release is 'published'
on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # Step 1: Check out your repository's code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Download the APK that you attached to the release
      # THIS ACTION WORKS CORRECTLY when you give it the filename and version.
      - name: Download release asset (app-release.apk)
        uses: robinraju/release-downloader@v1.9
        with:
          repository: ${{ github.repository }}
          tag: ${{ github.ref_name }}
          fileName: "app-release.apk"
          target: "downloads/" # Downloads the file INTO this directory
          token: ${{ secrets.GITHUB_TOKEN }}

      # Step 3 (NEW & SIMPLIFIED): Set up Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Use a modern version of Node.js

      # Step 4 (NEW & SIMPLIFIED): Run a Node.js script to update the JSON
      - name: Update apk-info.json using Node.js
        run: |
          const fs = require('fs');
          const path = './apk-info.json';
          const apkPath = './downloads/app-release.apk';
          
          const stats = fs.statSync(apkPath);
          const fileSizeInMB = (stats.size / (1024 * 1024)).toFixed(1);
          
          const version = "${{ github.ref_name }}".replace('v', '');
          const today = new Date().toISOString().slice(0, 10);
          
          const info = JSON.parse(fs.readFileSync(path, 'utf8'));
          
          info.version = version;
          info.update_date = today;
          info.size = `${fileSizeInMB} MB`;
          info.apk_url = `./downloads/app-release.apk`;
          
          fs.writeFileSync(path, JSON.stringify(info, null, 2));
          
          console.log(`Updated ${path} to version ${version}, size ${fileSizeInMB} MB`);
        shell: node {0}

      # Step 5: Commit the updated files back to your repository
      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: Auto-update APK to version ${{ github.ref_name }}"
          file_pattern: "downloads/app-release.apk apk-info.json"
